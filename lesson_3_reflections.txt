When would you want to use a remote repository rather than keeping all your work local?
whenever i am collaborating with people on projects i would want to use a remote repository. Also, 
this helps me in sharing code with others who can use my code for their projects or provide suggestions
to make the code better
this can be used as a way of showcasing some of the cool projects that i am working on

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
there may be some changes that you may have made to suit the code more for sharing with wider audience, it may not make sense to incorporate all 
those changes in local version
come of the files may be deleted from remote as you may deem them unappropriate for public, you may not want to see those chages in local

Describe the differences between forks, clones, and branches. When would you use one instead of another?
forks : if you want to take a copy of someone else's git repository then you fork his repository which makes it available under your account
clones: when you want to get a git hub repository into your local machine then you clone that repository. cloning can also be done when you want to take a copy of the local repo in the local machine
branches: branches allow you to create label to commits and further commits will be outside of master
When i would like to take someone else's git repository and make changes to it without affecting the original one, i would fork that repository. 
if i would like to make changes to a forked repository or a newly created repository on github, i may want to bring it to the local for which i need to clone the repository to my local machine
when there are different features that i am working on which cannot be included in the working version, i create a branch leaving the working version unattended so that i can merge the changes back to my master once all the changes have been completed 

What is the benefit of having a copy of the last known state of the remote stored locally?
storing known state of remote locally will allow us to understand where exactly commits of the remote have changed as compared to the the local after the last sync

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
i would use codeskulptor or similar softwares. use sharepoint to save the codes and let the other person update. git would be easier as the versions are also tracked. there is a learning curve associated with git which is the hard side of it, on the other hand using a shared drive is pretty straight forward way of doing it

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
whenever there is a need to collaborate with others before updating the master, i would create a new branch. Committing directly to master is lot easier without having to go through the ordeal of merging branch etc. creating a new branch would help in getting the changes approved before committing it to master